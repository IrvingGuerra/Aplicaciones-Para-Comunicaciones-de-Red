/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package escomarket;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;

/**
 *
 * @author irvingmac
 */
public class Servidor extends javax.swing.JFrame {
    
       
    int puerto = 1234;
    String host = "127.0.0.1";

    ServerSocket s;
    Socket cl;
    
    int x,y;
    
    ArrayList<Producto> Inventario = new ArrayList(5);
    //Respaldo de existencias iniciales.
    private static int AUX[] = new int[5];
    Carrito clienteCarrito = new Carrito();
    ArrayList<Carrito> clienteCarritoLista = new ArrayList<>(5);
    
    /**
     * Creates new form Servidor
     */
    public Servidor() {
        initComponents();
        this.setLocationRelativeTo(null);
        startService();
        cargarProductos();
        esperaCliente();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        FondoServidor = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("ADMINISTRACION");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 120, 20));

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 20, -1, -1));

        FondoServidor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/wall1.jpg"))); // NOI18N
        FondoServidor.setText("jLabel1");
        FondoServidor.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                FondoServidorMouseDragged(evt);
            }
        });
        FondoServidor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                FondoServidorMousePressed(evt);
            }
        });
        getContentPane().add(FondoServidor, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 370));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void FondoServidorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FondoServidorMousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_FondoServidorMousePressed

    private void FondoServidorMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FondoServidorMouseDragged
        this.setLocation(this.getLocation().x + evt.getX() -x,this.getLocation().y + evt.getY() -y);
    }//GEN-LAST:event_FondoServidorMouseDragged
                                    

 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Servidor().setVisible(true);
            }
        });
    }
    
    private void startService() {
        try{
            s = new ServerSocket(puerto);
            s.setReuseAddress(true);
            System.out.println("[ OK ] Servicio Iniciado, esperando cliente...");
        } catch(Exception e){
            e.printStackTrace();
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FondoServidor;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    private void cargarProductos() {
        Producto p1 = new Producto(0, "Play Station 4", "Sony", "Consola de Videojuegos", 7599, 20, "ps4.jpg");
        Producto p2 = new Producto(1, "Audifonos", "Hissense", "Audifonos inal치mbricos", 1100, 18, "audifonos.jpg");
        Producto p3 = new Producto(2, "Licencia Software", "Microsoft", "Licencia Windows 10 Home Edition 1 a침o", 1200, 30, "software.jpg");
        Producto p4 = new Producto(3, "Televisi칩n", "Samsung", "Smart TV Samsung 32 pulg. HD", 4500, 15, "tv.jpg");
        Producto p5 = new Producto(4, "Computadora", "DELL", "Computadora de escritorio DELL Inspiron 45700", 8699, 25, "pc.jpg");
        System.out.println("[ OK ] Productos creados");
        Inventario.add(0, p1);
        Inventario.add(1, p2);
        Inventario.add(2, p3);
        Inventario.add(3, p4);
        Inventario.add(4, p5);
        System.out.println("[ OK ] Productos a침adidos correctamente al inventario");
        for (int t = 0; t < Inventario.size(); t++) {
            AUX[t] = Inventario.get(t).getExistencias(); //Si desea limpiar el carrito
        }
    }


    private void esperaCliente() {
        try{
            while (true) {
                Socket cl = s.accept();
                BufferedReader br = new BufferedReader(new InputStreamReader(cl.getInputStream()));
                System.out.println("[ OK ] Cliente conectado desde: "+cl.getInetAddress()+" : "+cl.getPort());
                System.out.println("[ OK ] Esperando respuesta del cliente...");
                String respCl = br.readLine();
                System.out.println("[ OK ] Instruccion recibida: "+ respCl);
                switch (respCl) {
                    //Cuando recepta 1 nos indica que quiere que le enviemos productos
                    case "1":
                        ObjectOutputStream oos = new ObjectOutputStream(cl.getOutputStream());
                        for(int i=0;i<Inventario.size();i++){
                            oos.writeObject(Inventario.get(i));
                            oos.flush();
                            System.out.println("[ OK ] Objeto enviado: "+Inventario.get(i).getNombre());
                        }
                        oos.close();
                    break;
                    case "2":
                        String Darchivo = br.readLine();
                        byte[] b = new byte[1500];
                        int n,porcentaje = 0;
                        long enviados = 0;
                        System.out.println("[ OK ] Archivo solicitado: "+Darchivo);
                        for(int i=0;i<Inventario.size();i++){
                            if(Darchivo.compareTo(Inventario.get(i).getNombre())==0){
                                File fichero = Inventario.get(i).getImagen();
                                System.out.println("[ OK ] Se ha encontrado el archivo:" + fichero.getName());
                                DataOutputStream doss = new DataOutputStream(cl.getOutputStream());
                                System.out.println(fichero.getAbsolutePath());
                                DataInputStream diss = new DataInputStream(new FileInputStream(fichero.getAbsolutePath()));
                                doss.writeUTF(fichero.getName());
                                doss.flush();
                                doss.writeLong(fichero.length());
                                doss.flush();
                                while(enviados<fichero.length()){
                                    n=diss.read(b);
                                    doss.write(b,0,n);
                                    doss.flush();
                                    enviados += n;
                                    porcentaje = (int)((enviados*100)/fichero.length());
                                    System.out.print("[ OK ] Se ha enviado el "+porcentaje+" %");
                                }
                                System.out.println("[ OK ] Se ha completado envio del archivo");
                                diss.close();
                                doss.close();
                            }
                        }
                    break;
                    case "3":
                        try {
                            System.out.println("[ OK ] Recibiendo productos que desea comprar el cliente...");
                            ObjectInputStream ois = new ObjectInputStream(cl.getInputStream());
                            clienteCarritoLista = (ArrayList < Carrito >)ois.readObject();
                            for(int i=0;i<clienteCarritoLista.size();i++){
                                for(int j=0;j<5;j++){
                                    if(clienteCarritoLista.get(i).getProducto() == Inventario.get(j).getID()){
                                        //Significa que existe
                                        int cantidad = clienteCarritoLista.get(i).getCantidad();
                                        int existencias = Inventario.get(j).getExistencias();
                                        Inventario.get(j).setExistencias(existencias-cantidad);
                                        System.out.println("[ OK ] Inventario Actualizado con exito...");
                                        j=4;
                                    }
                                }
                            }
                            ois.close();
                            cl.close();
                        } catch (IOException | ClassNotFoundException e) {
                            e.printStackTrace();
                        }
                    break;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

